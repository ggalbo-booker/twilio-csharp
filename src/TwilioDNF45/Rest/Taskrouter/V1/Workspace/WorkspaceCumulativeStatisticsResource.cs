/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// WorkspaceCumulativeStatisticsResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Taskrouter.V1.Workspace 
{

    public class WorkspaceCumulativeStatisticsResource : Resource 
    {
        private static Request BuildFetchRequest(FetchWorkspaceCumulativeStatisticsOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Taskrouter,
                "/v1/Workspaces/" + options.PathWorkspaceSid + "/CumulativeStatistics",
                client.Region,
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="options"> Fetch WorkspaceCumulativeStatistics parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of WorkspaceCumulativeStatistics </returns> 
        public static WorkspaceCumulativeStatisticsResource Fetch(FetchWorkspaceCumulativeStatisticsOptions options, 
                                                                  ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="options"> Fetch WorkspaceCumulativeStatistics parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of WorkspaceCumulativeStatistics </returns> 
        public static async System.Threading.Tasks.Task<WorkspaceCumulativeStatisticsResource> FetchAsync(FetchWorkspaceCumulativeStatisticsOptions options, 
                                                                                                          ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="pathWorkspaceSid"> The workspace_sid </param>
        /// <param name="endDate"> The end_date </param>
        /// <param name="minutes"> The minutes </param>
        /// <param name="startDate"> The start_date </param>
        /// <param name="taskChannel"> The task_channel </param>
        /// <param name="splitByWaitTime"> The split_by_wait_time </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of WorkspaceCumulativeStatistics </returns> 
        public static WorkspaceCumulativeStatisticsResource Fetch(string pathWorkspaceSid, 
                                                                  DateTime? endDate = null, 
                                                                  int? minutes = null, 
                                                                  DateTime? startDate = null, 
                                                                  string taskChannel = null, 
                                                                  string splitByWaitTime = null, 
                                                                  ITwilioRestClient client = null)
        {
            var options = new FetchWorkspaceCumulativeStatisticsOptions(pathWorkspaceSid){EndDate = endDate, Minutes = minutes, StartDate = startDate, TaskChannel = taskChannel, SplitByWaitTime = splitByWaitTime};
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="pathWorkspaceSid"> The workspace_sid </param>
        /// <param name="endDate"> The end_date </param>
        /// <param name="minutes"> The minutes </param>
        /// <param name="startDate"> The start_date </param>
        /// <param name="taskChannel"> The task_channel </param>
        /// <param name="splitByWaitTime"> The split_by_wait_time </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of WorkspaceCumulativeStatistics </returns> 
        public static async System.Threading.Tasks.Task<WorkspaceCumulativeStatisticsResource> FetchAsync(string pathWorkspaceSid, 
                                                                                                          DateTime? endDate = null, 
                                                                                                          int? minutes = null, 
                                                                                                          DateTime? startDate = null, 
                                                                                                          string taskChannel = null, 
                                                                                                          string splitByWaitTime = null, 
                                                                                                          ITwilioRestClient client = null)
        {
            var options = new FetchWorkspaceCumulativeStatisticsOptions(pathWorkspaceSid){EndDate = endDate, Minutes = minutes, StartDate = startDate, TaskChannel = taskChannel, SplitByWaitTime = splitByWaitTime};
            return await FetchAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a WorkspaceCumulativeStatisticsResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> WorkspaceCumulativeStatisticsResource object represented by the provided JSON </returns> 
        public static WorkspaceCumulativeStatisticsResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<WorkspaceCumulativeStatisticsResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The account_sid
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The avg_task_acceptance_time
        /// </summary>
        [JsonProperty("avg_task_acceptance_time")]
        public int? AvgTaskAcceptanceTime { get; private set; }
        /// <summary>
        /// The start_time
        /// </summary>
        [JsonProperty("start_time")]
        public DateTime? StartTime { get; private set; }
        /// <summary>
        /// The end_time
        /// </summary>
        [JsonProperty("end_time")]
        public DateTime? EndTime { get; private set; }
        /// <summary>
        /// The reservations_created
        /// </summary>
        [JsonProperty("reservations_created")]
        public int? ReservationsCreated { get; private set; }
        /// <summary>
        /// The reservations_accepted
        /// </summary>
        [JsonProperty("reservations_accepted")]
        public int? ReservationsAccepted { get; private set; }
        /// <summary>
        /// The reservations_rejected
        /// </summary>
        [JsonProperty("reservations_rejected")]
        public int? ReservationsRejected { get; private set; }
        /// <summary>
        /// The reservations_timed_out
        /// </summary>
        [JsonProperty("reservations_timed_out")]
        public int? ReservationsTimedOut { get; private set; }
        /// <summary>
        /// The reservations_canceled
        /// </summary>
        [JsonProperty("reservations_canceled")]
        public int? ReservationsCanceled { get; private set; }
        /// <summary>
        /// The reservations_rescinded
        /// </summary>
        [JsonProperty("reservations_rescinded")]
        public int? ReservationsRescinded { get; private set; }
        /// <summary>
        /// The split_by_wait_time
        /// </summary>
        [JsonProperty("split_by_wait_time")]
        public object SplitByWaitTime { get; private set; }
        /// <summary>
        /// The wait_duration_until_accepted
        /// </summary>
        [JsonProperty("wait_duration_until_accepted")]
        public object WaitDurationUntilAccepted { get; private set; }
        /// <summary>
        /// The wait_duration_until_canceled
        /// </summary>
        [JsonProperty("wait_duration_until_canceled")]
        public object WaitDurationUntilCanceled { get; private set; }
        /// <summary>
        /// The tasks_canceled
        /// </summary>
        [JsonProperty("tasks_canceled")]
        public int? TasksCanceled { get; private set; }
        /// <summary>
        /// The tasks_completed
        /// </summary>
        [JsonProperty("tasks_completed")]
        public int? TasksCompleted { get; private set; }
        /// <summary>
        /// The tasks_created
        /// </summary>
        [JsonProperty("tasks_created")]
        public int? TasksCreated { get; private set; }
        /// <summary>
        /// The tasks_deleted
        /// </summary>
        [JsonProperty("tasks_deleted")]
        public int? TasksDeleted { get; private set; }
        /// <summary>
        /// The tasks_moved
        /// </summary>
        [JsonProperty("tasks_moved")]
        public int? TasksMoved { get; private set; }
        /// <summary>
        /// The tasks_timed_out_in_workflow
        /// </summary>
        [JsonProperty("tasks_timed_out_in_workflow")]
        public int? TasksTimedOutInWorkflow { get; private set; }
        /// <summary>
        /// The workspace_sid
        /// </summary>
        [JsonProperty("workspace_sid")]
        public string WorkspaceSid { get; private set; }
        /// <summary>
        /// The url
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        private WorkspaceCumulativeStatisticsResource()
        {

        }
    }

}