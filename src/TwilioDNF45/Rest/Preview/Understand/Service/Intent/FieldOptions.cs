/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Preview.Understand.Service.Intent 
{

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// FetchFieldOptions
    /// </summary>
    public class FetchFieldOptions : IOptions<FieldResource> 
    {
        /// <summary>
        /// The service_sid
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The intent_sid
        /// </summary>
        public string PathIntentSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchFieldOptions
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="pathIntentSid"> The intent_sid </param>
        /// <param name="pathSid"> The sid </param>
        public FetchFieldOptions(string pathServiceSid, string pathIntentSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathIntentSid = pathIntentSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// ReadFieldOptions
    /// </summary>
    public class ReadFieldOptions : ReadOptions<FieldResource> 
    {
        /// <summary>
        /// The service_sid
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The intent_sid
        /// </summary>
        public string PathIntentSid { get; }

        /// <summary>
        /// Construct a new ReadFieldOptions
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="pathIntentSid"> The intent_sid </param>
        public ReadFieldOptions(string pathServiceSid, string pathIntentSid)
        {
            PathServiceSid = pathServiceSid;
            PathIntentSid = pathIntentSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// CreateFieldOptions
    /// </summary>
    public class CreateFieldOptions : IOptions<FieldResource> 
    {
        /// <summary>
        /// The service_sid
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The intent_sid
        /// </summary>
        public string PathIntentSid { get; }
        /// <summary>
        /// The field_type
        /// </summary>
        public string FieldType { get; }
        /// <summary>
        /// The unique_name
        /// </summary>
        public string UniqueName { get; }

        /// <summary>
        /// Construct a new CreateFieldOptions
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="pathIntentSid"> The intent_sid </param>
        /// <param name="fieldType"> The field_type </param>
        /// <param name="uniqueName"> The unique_name </param>
        public CreateFieldOptions(string pathServiceSid, string pathIntentSid, string fieldType, string uniqueName)
        {
            PathServiceSid = pathServiceSid;
            PathIntentSid = pathIntentSid;
            FieldType = fieldType;
            UniqueName = uniqueName;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (FieldType != null)
            {
                p.Add(new KeyValuePair<string, string>("FieldType", FieldType));
            }

            if (UniqueName != null)
            {
                p.Add(new KeyValuePair<string, string>("UniqueName", UniqueName));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// DeleteFieldOptions
    /// </summary>
    public class DeleteFieldOptions : IOptions<FieldResource> 
    {
        /// <summary>
        /// The service_sid
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The intent_sid
        /// </summary>
        public string PathIntentSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteFieldOptions
        /// </summary>
        /// <param name="pathServiceSid"> The service_sid </param>
        /// <param name="pathIntentSid"> The intent_sid </param>
        /// <param name="pathSid"> The sid </param>
        public DeleteFieldOptions(string pathServiceSid, string pathIntentSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathIntentSid = pathIntentSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

}