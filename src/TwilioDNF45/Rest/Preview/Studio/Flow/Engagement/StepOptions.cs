/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Preview.Studio.Flow.Engagement 
{

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// Retrieve a list of all Steps for an Engagement.
    /// </summary>
    public class ReadStepOptions : ReadOptions<StepResource> 
    {
        /// <summary>
        /// Flow Sid.
        /// </summary>
        public string PathFlowSid { get; }
        /// <summary>
        /// Engagement Sid.
        /// </summary>
        public string PathEngagementSid { get; }

        /// <summary>
        /// Construct a new ReadStepOptions
        /// </summary>
        /// <param name="pathFlowSid"> Flow Sid. </param>
        /// <param name="pathEngagementSid"> Engagement Sid. </param>
        public ReadStepOptions(string pathFlowSid, string pathEngagementSid)
        {
            PathFlowSid = pathFlowSid;
            PathEngagementSid = pathEngagementSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// FetchStepOptions
    /// </summary>
    public class FetchStepOptions : IOptions<StepResource> 
    {
        /// <summary>
        /// The flow_sid
        /// </summary>
        public string PathFlowSid { get; }
        /// <summary>
        /// The engagement_sid
        /// </summary>
        public string PathEngagementSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchStepOptions
        /// </summary>
        /// <param name="pathFlowSid"> The flow_sid </param>
        /// <param name="pathEngagementSid"> The engagement_sid </param>
        /// <param name="pathSid"> The sid </param>
        public FetchStepOptions(string pathFlowSid, string pathEngagementSid, string pathSid)
        {
            PathFlowSid = pathFlowSid;
            PathEngagementSid = pathEngagementSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

}