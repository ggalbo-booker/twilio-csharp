/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Preview.Studio.Flow 
{

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// Retrieve a list of all Engagements for the Flow.
    /// </summary>
    public class ReadEngagementOptions : ReadOptions<EngagementResource> 
    {
        /// <summary>
        /// Flow Sid.
        /// </summary>
        public string PathFlowSid { get; }

        /// <summary>
        /// Construct a new ReadEngagementOptions
        /// </summary>
        /// <param name="pathFlowSid"> Flow Sid. </param>
        public ReadEngagementOptions(string pathFlowSid)
        {
            PathFlowSid = pathFlowSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// FetchEngagementOptions
    /// </summary>
    public class FetchEngagementOptions : IOptions<EngagementResource> 
    {
        /// <summary>
        /// The flow_sid
        /// </summary>
        public string PathFlowSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchEngagementOptions
        /// </summary>
        /// <param name="pathFlowSid"> The flow_sid </param>
        /// <param name="pathSid"> The sid </param>
        public FetchEngagementOptions(string pathFlowSid, string pathSid)
        {
            PathFlowSid = pathFlowSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// Triggers a new Engagement for the Flow
    /// </summary>
    public class CreateEngagementOptions : IOptions<EngagementResource> 
    {
        /// <summary>
        /// Flow Sid.
        /// </summary>
        public string PathFlowSid { get; }
        /// <summary>
        /// The to
        /// </summary>
        public Types.PhoneNumber To { get; }
        /// <summary>
        /// The from
        /// </summary>
        public Types.PhoneNumber From { get; }
        /// <summary>
        /// The parameters
        /// </summary>
        public string Parameters { get; set; }

        /// <summary>
        /// Construct a new CreateEngagementOptions
        /// </summary>
        /// <param name="pathFlowSid"> Flow Sid. </param>
        /// <param name="to"> The to </param>
        /// <param name="from"> The from </param>
        public CreateEngagementOptions(string pathFlowSid, Types.PhoneNumber to, Types.PhoneNumber from)
        {
            PathFlowSid = pathFlowSid;
            To = to;
            From = from;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (To != null)
            {
                p.Add(new KeyValuePair<string, string>("To", To.ToString()));
            }

            if (From != null)
            {
                p.Add(new KeyValuePair<string, string>("From", From.ToString()));
            }

            if (Parameters != null)
            {
                p.Add(new KeyValuePair<string, string>("Parameters", Parameters));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// Delete a specific Engagement.
    /// </summary>
    public class DeleteEngagementOptions : IOptions<EngagementResource> 
    {
        /// <summary>
        /// Flow Sid.
        /// </summary>
        public string PathFlowSid { get; }
        /// <summary>
        /// A string that uniquely identifies this Engagement.
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteEngagementOptions
        /// </summary>
        /// <param name="pathFlowSid"> Flow Sid. </param>
        /// <param name="pathSid"> A string that uniquely identifies this Engagement. </param>
        public DeleteEngagementOptions(string pathFlowSid, string pathSid)
        {
            PathFlowSid = pathFlowSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

}